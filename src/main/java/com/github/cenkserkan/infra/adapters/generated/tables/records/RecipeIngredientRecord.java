/*
 * This file is generated by jOOQ.
 */
package com.github.cenkserkan.infra.adapters.generated.tables.records;


import com.github.cenkserkan.infra.adapters.generated.tables.RecipeIngredient;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeIngredientRecord extends TableRecordImpl<RecipeIngredientRecord> implements Record7<UUID, UUID, String, String, Double, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.recipe_ingredient.recipe_id</code>.
     */
    public void setRecipeId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.recipe_ingredient.recipe_id</code>.
     */
    public UUID getRecipeId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.recipe_ingredient.ingredient_id</code>.
     */
    public void setIngredientId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.recipe_ingredient.ingredient_id</code>.
     */
    public UUID getIngredientId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.recipe_ingredient.quantity</code>.
     */
    public void setQuantity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.recipe_ingredient.quantity</code>.
     */
    public String getQuantity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.recipe_ingredient.unit</code>.
     */
    public void setUnit(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.recipe_ingredient.unit</code>.
     */
    public String getUnit() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.recipe_ingredient.weight_in_gram</code>.
     */
    public void setWeightInGram(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.recipe_ingredient.weight_in_gram</code>.
     */
    public Double getWeightInGram() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.recipe_ingredient.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.recipe_ingredient.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.recipe_ingredient.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.recipe_ingredient.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, String, String, Double, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, String, String, Double, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return RecipeIngredient.RECIPE_INGREDIENT.RECIPE_ID;
    }

    @Override
    public Field<UUID> field2() {
        return RecipeIngredient.RECIPE_INGREDIENT.INGREDIENT_ID;
    }

    @Override
    public Field<String> field3() {
        return RecipeIngredient.RECIPE_INGREDIENT.QUANTITY;
    }

    @Override
    public Field<String> field4() {
        return RecipeIngredient.RECIPE_INGREDIENT.UNIT;
    }

    @Override
    public Field<Double> field5() {
        return RecipeIngredient.RECIPE_INGREDIENT.WEIGHT_IN_GRAM;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return RecipeIngredient.RECIPE_INGREDIENT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return RecipeIngredient.RECIPE_INGREDIENT.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getRecipeId();
    }

    @Override
    public UUID component2() {
        return getIngredientId();
    }

    @Override
    public String component3() {
        return getQuantity();
    }

    @Override
    public String component4() {
        return getUnit();
    }

    @Override
    public Double component5() {
        return getWeightInGram();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getRecipeId();
    }

    @Override
    public UUID value2() {
        return getIngredientId();
    }

    @Override
    public String value3() {
        return getQuantity();
    }

    @Override
    public String value4() {
        return getUnit();
    }

    @Override
    public Double value5() {
        return getWeightInGram();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public RecipeIngredientRecord value1(UUID value) {
        setRecipeId(value);
        return this;
    }

    @Override
    public RecipeIngredientRecord value2(UUID value) {
        setIngredientId(value);
        return this;
    }

    @Override
    public RecipeIngredientRecord value3(String value) {
        setQuantity(value);
        return this;
    }

    @Override
    public RecipeIngredientRecord value4(String value) {
        setUnit(value);
        return this;
    }

    @Override
    public RecipeIngredientRecord value5(Double value) {
        setWeightInGram(value);
        return this;
    }

    @Override
    public RecipeIngredientRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public RecipeIngredientRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public RecipeIngredientRecord values(UUID value1, UUID value2, String value3, String value4, Double value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecipeIngredientRecord
     */
    public RecipeIngredientRecord() {
        super(RecipeIngredient.RECIPE_INGREDIENT);
    }

    /**
     * Create a detached, initialised RecipeIngredientRecord
     */
    public RecipeIngredientRecord(UUID recipeId, UUID ingredientId, String quantity, String unit, Double weightInGram, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(RecipeIngredient.RECIPE_INGREDIENT);

        setRecipeId(recipeId);
        setIngredientId(ingredientId);
        setQuantity(quantity);
        setUnit(unit);
        setWeightInGram(weightInGram);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
