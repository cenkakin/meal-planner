/*
 * This file is generated by jOOQ.
 */
package com.github.cenkserkan.infra.adapters.generated.tables.records;


import com.github.cenkserkan.infra.adapters.generated.tables.Calendar;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarRecord extends UpdatableRecordImpl<CalendarRecord> implements Record6<UUID, LocalDateTime, LocalDateTime, UUID, LocalDate, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.calendar.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.calendar.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.calendar.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.calendar.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.calendar.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.calendar.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.calendar.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.calendar.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.calendar.date</code>.
     */
    public void setDate(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.calendar.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.calendar.recipe_id</code>.
     */
    public void setRecipeId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.calendar.recipe_id</code>.
     */
    public UUID getRecipeId() {
        return (UUID) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, LocalDateTime, LocalDateTime, UUID, LocalDate, UUID> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UUID, LocalDateTime, LocalDateTime, UUID, LocalDate, UUID> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Calendar.CALENDAR.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Calendar.CALENDAR.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Calendar.CALENDAR.UPDATED_AT;
    }

    @Override
    public Field<UUID> field4() {
        return Calendar.CALENDAR.USER_ID;
    }

    @Override
    public Field<LocalDate> field5() {
        return Calendar.CALENDAR.DATE;
    }

    @Override
    public Field<UUID> field6() {
        return Calendar.CALENDAR.RECIPE_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public UUID component4() {
        return getUserId();
    }

    @Override
    public LocalDate component5() {
        return getDate();
    }

    @Override
    public UUID component6() {
        return getRecipeId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public UUID value4() {
        return getUserId();
    }

    @Override
    public LocalDate value5() {
        return getDate();
    }

    @Override
    public UUID value6() {
        return getRecipeId();
    }

    @Override
    public CalendarRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public CalendarRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CalendarRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CalendarRecord value4(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public CalendarRecord value5(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public CalendarRecord value6(UUID value) {
        setRecipeId(value);
        return this;
    }

    @Override
    public CalendarRecord values(UUID value1, LocalDateTime value2, LocalDateTime value3, UUID value4, LocalDate value5, UUID value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CalendarRecord
     */
    public CalendarRecord() {
        super(Calendar.CALENDAR);
    }

    /**
     * Create a detached, initialised CalendarRecord
     */
    public CalendarRecord(UUID id, LocalDateTime createdAt, LocalDateTime updatedAt, UUID userId, LocalDate date, UUID recipeId) {
        super(Calendar.CALENDAR);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setUserId(userId);
        setDate(date);
        setRecipeId(recipeId);
    }
}
