/*
 * This file is generated by jOOQ.
 */
package com.github.cenkserkan.infra.adapters.generated;


import com.github.cenkserkan.infra.adapters.generated.tables.Ingredient;
import com.github.cenkserkan.infra.adapters.generated.tables.Recipe;
import com.github.cenkserkan.infra.adapters.generated.tables.RecipeCleaned;
import com.github.cenkserkan.infra.adapters.generated.tables.RecipeImage;
import com.github.cenkserkan.infra.adapters.generated.tables.RecipeImageCleaned;
import com.github.cenkserkan.infra.adapters.generated.tables.records.IngredientRecord;
import com.github.cenkserkan.infra.adapters.generated.tables.records.RecipeCleanedRecord;
import com.github.cenkserkan.infra.adapters.generated.tables.records.RecipeImageCleanedRecord;
import com.github.cenkserkan.infra.adapters.generated.tables.records.RecipeImageRecord;
import com.github.cenkserkan.infra.adapters.generated.tables.records.RecipeRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<IngredientRecord> INGREDIENT_NAME_KEY = Internal.createUniqueKey(Ingredient.INGREDIENT, DSL.name("ingredient_name_key"), new TableField[] { Ingredient.INGREDIENT.NAME }, true);
    public static final UniqueKey<IngredientRecord> INGREDIENT_PKEY = Internal.createUniqueKey(Ingredient.INGREDIENT, DSL.name("ingredient_pkey"), new TableField[] { Ingredient.INGREDIENT.ID }, true);
    public static final UniqueKey<RecipeRecord> RECIPE_PKEY = Internal.createUniqueKey(Recipe.RECIPE, DSL.name("recipe_pkey"), new TableField[] { Recipe.RECIPE.ID }, true);
    public static final UniqueKey<RecipeCleanedRecord> RECIPE_CLEANED_PKEY = Internal.createUniqueKey(RecipeCleaned.RECIPE_CLEANED, DSL.name("recipe_cleaned_pkey"), new TableField[] { RecipeCleaned.RECIPE_CLEANED.ID }, true);
    public static final UniqueKey<RecipeImageRecord> RECIPE_IMAGE_PKEY = Internal.createUniqueKey(RecipeImage.RECIPE_IMAGE, DSL.name("recipe_image_pkey"), new TableField[] { RecipeImage.RECIPE_IMAGE.RECIPE_ID, RecipeImage.RECIPE_IMAGE.URL }, true);
    public static final UniqueKey<RecipeImageCleanedRecord> RECIPE_IMAGE_CLEANED_PKEY = Internal.createUniqueKey(RecipeImageCleaned.RECIPE_IMAGE_CLEANED, DSL.name("recipe_image_cleaned_pkey"), new TableField[] { RecipeImageCleaned.RECIPE_IMAGE_CLEANED.ID }, true);
}
